import "./main.css";
import {Column as $gyhAV$Column, TableHeader as $e668f3d0f378a712$re_export$TableHeader, TableBody as $e668f3d0f378a712$re_export$TableBody, Section as $e668f3d0f378a712$re_export$Section, Row as $e668f3d0f378a712$re_export$Row, Cell as $e668f3d0f378a712$re_export$Cell, useTableState as $gyhAV$useTableState, useTableColumnResizeState as $gyhAV$useTableColumnResizeState} from "@react-stately/table";
import $gyhAV$spectrumiconsuiArrowDownSmall from "@spectrum-icons/ui/ArrowDownSmall";
import {useLayoutEffect as $gyhAV$useLayoutEffect, mergeProps as $gyhAV$mergeProps, chain as $gyhAV$chain} from "@react-aria/utils";
import {Checkbox as $gyhAV$Checkbox} from "@react-spectrum/checkbox";
import {useStyleProps as $gyhAV$useStyleProps, useDOMRef as $gyhAV$useDOMRef, classNames as $gyhAV$classNames, useFocusableRef as $gyhAV$useFocusableRef, useUnwrapDOMRef as $gyhAV$useUnwrapDOMRef} from "@react-spectrum/utils";
import {FocusRing as $gyhAV$FocusRing, useFocusRing as $gyhAV$useFocusRing} from "@react-aria/focus";
import {MenuTrigger as $gyhAV$MenuTrigger, Menu as $gyhAV$Menu, Item as $gyhAV$Item} from "@react-spectrum/menu";
import {layoutInfoToStyle as $gyhAV$layoutInfoToStyle, VirtualizerItem as $gyhAV$VirtualizerItem, setScrollLeft as $gyhAV$setScrollLeft, useVirtualizer as $gyhAV$useVirtualizer, ScrollView as $gyhAV$ScrollView} from "@react-aria/virtualizer";
import {ProgressCircle as $gyhAV$ProgressCircle} from "@react-spectrum/progress";
import $gyhAV$react, {useContext as $gyhAV$useContext, useState as $gyhAV$useState, useCallback as $gyhAV$useCallback, useRef as $gyhAV$useRef, useMemo as $gyhAV$useMemo, useEffect as $gyhAV$useEffect} from "react";
import {useVirtualizerState as $gyhAV$useVirtualizerState} from "@react-stately/virtualizer";
import {TableLayout as $gyhAV$TableLayout} from "@react-stately/layout";
import {TooltipTrigger as $gyhAV$TooltipTrigger, Tooltip as $gyhAV$Tooltip} from "@react-spectrum/tooltip";
import {useButton as $gyhAV$useButton} from "@react-aria/button";
import {useHover as $gyhAV$useHover, usePress as $gyhAV$usePress} from "@react-aria/interactions";
import {useLocale as $gyhAV$useLocale, useLocalizedStringFormatter as $gyhAV$useLocalizedStringFormatter} from "@react-aria/i18n";
import {useProviderProps as $gyhAV$useProviderProps, useProvider as $gyhAV$useProvider} from "@react-spectrum/provider";
import {useTable as $gyhAV$useTable, useTableRowGroup as $gyhAV$useTableRowGroup, useTableColumnHeader as $gyhAV$useTableColumnHeader, useTableSelectAllCheckbox as $gyhAV$useTableSelectAllCheckbox, useTableRow as $gyhAV$useTableRow, useTableHeaderRow as $gyhAV$useTableHeaderRow, useTableCell as $gyhAV$useTableCell, useTableSelectionCheckbox as $gyhAV$useTableSelectionCheckbox, useTableColumnResize as $gyhAV$useTableColumnResize} from "@react-aria/table";
import {VisuallyHidden as $gyhAV$VisuallyHidden} from "@react-aria/visually-hidden";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}






var $467944769c14687b$exports = {};
var $daf541512f75fd9b$exports = {};
$daf541512f75fd9b$exports = {
    "columnResizer": `أداة تغيير حجم العمود`,
    "loading": `جارٍ التحميل...`,
    "loadingMore": `جارٍ تحميل المزيد...`,
    "resizeColumn": `تغيير حجم العمود`,
    "sortAscending": `فرز بترتيب تصاعدي`,
    "sortDescending": `فرز بترتيب تنازلي`
};


var $50819411ab066aa0$exports = {};
$50819411ab066aa0$exports = {
    "columnResizer": `Преоразмеряване на колони`,
    "loading": `Зареждане...`,
    "loadingMore": `Зареждане на още...`,
    "resizeColumn": `Преоразмеряване на колона`,
    "sortAscending": `Възходящо сортиране`,
    "sortDescending": `Низходящо сортиране `
};


var $4f747f794f1bcba7$exports = {};
$4f747f794f1bcba7$exports = {
    "columnResizer": `Změna velikosti sloupce`,
    "loading": `Načítání...`,
    "loadingMore": `Načítání dalších...`,
    "resizeColumn": `Změnit velikost sloupce`,
    "sortAscending": `Seřadit vzestupně`,
    "sortDescending": `Seřadit sestupně`
};


var $9b4578f7fea36fce$exports = {};
$9b4578f7fea36fce$exports = {
    "columnResizer": `Kolonneændring`,
    "loading": `Indlæser ...`,
    "loadingMore": `Indlæser flere ...`,
    "resizeColumn": `Tilpas størrelse på kolonne`,
    "sortAscending": `Sorter stigende`,
    "sortDescending": `Sorter faldende`
};


var $d1341bbc3e1d2378$exports = {};
$d1341bbc3e1d2378$exports = {
    "columnResizer": `Spaltenanpassung`,
    "loading": `Laden...`,
    "loadingMore": `Mehr laden ...`,
    "resizeColumn": `Spaltengröße ändern`,
    "sortAscending": `Aufsteigend sortieren`,
    "sortDescending": `Absteigend sortieren`
};


var $62dc02a47a5c68a9$exports = {};
$62dc02a47a5c68a9$exports = {
    "columnResizer": `Αλλαγή μεγέθους στήλης`,
    "loading": `Φόρτωση...`,
    "loadingMore": `Φόρτωση περισσότερων...`,
    "resizeColumn": `Αλλαγή μεγέθους στήλης`,
    "sortAscending": `Ταξινόμηση κατά αύξουσα σειρά`,
    "sortDescending": `Ταξινόμηση κατά φθίνουσα σειρά`
};


var $4040b78666bdeb49$exports = {};
$4040b78666bdeb49$exports = {
    "loading": `Loading…`,
    "loadingMore": `Loading more…`,
    "sortAscending": `Sort Ascending`,
    "sortDescending": `Sort Descending`,
    "resizeColumn": `Resize column`,
    "columnResizer": `Column resizer`
};


var $b77a23040d0637b4$exports = {};
$b77a23040d0637b4$exports = {
    "columnResizer": `Redimensionador de columnas`,
    "loading": `Cargando…`,
    "loadingMore": `Cargando más…`,
    "resizeColumn": `Cambiar el tamaño de la columna`,
    "sortAscending": `Orden de subida`,
    "sortDescending": `Orden de bajada`
};


var $54ccb4bcf3ebc0a8$exports = {};
$54ccb4bcf3ebc0a8$exports = {
    "columnResizer": `Veeru suuruse muutja`,
    "loading": `Laadimine...`,
    "loadingMore": `Laadi rohkem...`,
    "resizeColumn": `Muuda veeru suurust`,
    "sortAscending": `Sordi kasvavalt`,
    "sortDescending": `Sordi kahanevalt`
};


var $37e671b8f89037ca$exports = {};
$37e671b8f89037ca$exports = {
    "columnResizer": `Sarakekoon muuttaja`,
    "loading": `Ladataan…`,
    "loadingMore": `Ladataan lisää…`,
    "resizeColumn": `Muuta sarakkeen kokoa`,
    "sortAscending": `Lajittelujärjestys: nouseva`,
    "sortDescending": `Lajittelujärjestys: laskeva`
};


var $8d65c5abdb6b7cbc$exports = {};
$8d65c5abdb6b7cbc$exports = {
    "columnResizer": `Redimensionnement de colonne`,
    "loading": `Chargement...`,
    "loadingMore": `Chargement supplémentaire...`,
    "resizeColumn": `Redimensionner la colonne`,
    "sortAscending": `Trier par ordre croissant`,
    "sortDescending": `Trier par ordre décroissant`
};


var $a87fac8df5d40e78$exports = {};
$a87fac8df5d40e78$exports = {
    "columnResizer": `שינוי גודל עמודה`,
    "loading": `טוען...`,
    "loadingMore": `טוען עוד...`,
    "resizeColumn": `שנה את גודל העמודה`,
    "sortAscending": `מיין בסדר עולה`,
    "sortDescending": `מיין בסדר יורד`
};


var $a7ee65f0f8055b83$exports = {};
$a7ee65f0f8055b83$exports = {
    "columnResizer": `Alat za promjenu veličine stupca`,
    "loading": `Učitavam...`,
    "loadingMore": `Učitavam još...`,
    "resizeColumn": `Promijeni veličinu stupca`,
    "sortAscending": `Sortiraj uzlazno`,
    "sortDescending": `Sortiraj silazno`
};


var $e6091fd2263a451f$exports = {};
$e6091fd2263a451f$exports = {
    "columnResizer": `Oszlopátméretező`,
    "loading": `Betöltés folyamatban…`,
    "loadingMore": `Továbbiak betöltése folyamatban…`,
    "resizeColumn": `Oszlop átméretezése`,
    "sortAscending": `Növekvő rendezés`,
    "sortDescending": `Csökkenő rendezés`
};


var $c8d9d250bf8952b2$exports = {};
$c8d9d250bf8952b2$exports = {
    "columnResizer": `Ridimensionamento colonne`,
    "loading": `Caricamento...`,
    "loadingMore": `Caricamento altri...`,
    "resizeColumn": `Ridimensiona colonna`,
    "sortAscending": `Ordinamento crescente`,
    "sortDescending": `Ordinamento decrescente`
};


var $df07a03bb9f879ed$exports = {};
$df07a03bb9f879ed$exports = {
    "columnResizer": `列リサイザー`,
    "loading": `読み込み中...`,
    "loadingMore": `さらに読み込み中...`,
    "resizeColumn": `列幅を変更`,
    "sortAscending": `昇順に並べ替え`,
    "sortDescending": `降順に並べ替え`
};


var $40b3ef3504f4b1d0$exports = {};
$40b3ef3504f4b1d0$exports = {
    "columnResizer": `열 크기 조정기`,
    "loading": `로드 중`,
    "loadingMore": `추가 로드 중`,
    "resizeColumn": `열 크기 조정`,
    "sortAscending": `오름차순 정렬`,
    "sortDescending": `내림차순 정렬`
};


var $c6959b6b120377f9$exports = {};
$c6959b6b120377f9$exports = {
    "columnResizer": `Stulpelio dydžio keitiklis`,
    "loading": `Įkeliama...`,
    "loadingMore": `Įkeliama daugiau...`,
    "resizeColumn": `Keisti stulpelio dydį`,
    "sortAscending": `Rikiuoti didėjimo tvarka`,
    "sortDescending": `Rikiuoti mažėjimo tvarka`
};


var $8fcc23e9320cffd0$exports = {};
$8fcc23e9320cffd0$exports = {
    "columnResizer": `Kolonnas izmēru mainītājs`,
    "loading": `Notiek ielāde...`,
    "loadingMore": `Tiek ielādēts vēl...`,
    "resizeColumn": `Mainīt kolonnas lielumu`,
    "sortAscending": `Kārtot augošā secībā`,
    "sortDescending": `Kārtot dilstošā secībā`
};


var $ec9bb7644b9b61e5$exports = {};
$ec9bb7644b9b61e5$exports = {
    "columnResizer": `Størrelsesendring av kolonne`,
    "loading": `Laster inn ...`,
    "loadingMore": `Laster inn flere ...`,
    "resizeColumn": `Endre størrelse på kolonne`,
    "sortAscending": `Sorter stigende`,
    "sortDescending": `Sorter synkende`
};


var $049ab8e2dc69b622$exports = {};
$049ab8e2dc69b622$exports = {
    "columnResizer": `Groottewijziging van kolom`,
    "loading": `Laden...`,
    "loadingMore": `Meer laden...`,
    "resizeColumn": `Kolomgrootte wijzigen`,
    "sortAscending": `Oplopend sorteren`,
    "sortDescending": `Aflopend sorteren`
};


var $480b88f7afcf23a9$exports = {};
$480b88f7afcf23a9$exports = {
    "columnResizer": `Narzędzie zmiany rozmiaru kolumny`,
    "loading": `Ładowanie...`,
    "loadingMore": `Wczytywanie większej liczby...`,
    "resizeColumn": `Zmień rozmiar kolumny`,
    "sortAscending": `Sortuj rosnąco`,
    "sortDescending": `Sortuj malejąco`
};


var $0c053d6ef0255c08$exports = {};
$0c053d6ef0255c08$exports = {
    "columnResizer": `Redimensionamento de colunas`,
    "loading": `Carregando...`,
    "loadingMore": `Carregando mais...`,
    "resizeColumn": `Redimensionar coluna`,
    "sortAscending": `Ordenar por ordem crescente`,
    "sortDescending": `Ordenar por ordem decrescente`
};


var $3aff8d1b1fa24532$exports = {};
$3aff8d1b1fa24532$exports = {
    "columnResizer": `Redimensionador de coluna`,
    "loading": `A carregar...`,
    "loadingMore": `A carregar mais...`,
    "resizeColumn": `Redimensionar coluna`,
    "sortAscending": `Ordenar por ordem ascendente`,
    "sortDescending": `Ordenar por ordem decrescente`
};


var $90e0c3e69dc73a74$exports = {};
$90e0c3e69dc73a74$exports = {
    "columnResizer": `Instrument redimensionare coloane`,
    "loading": `Se încarcă...`,
    "loadingMore": `Se încarcă mai multe...`,
    "resizeColumn": `Redimensionați coloana`,
    "sortAscending": `Sortați crescător`,
    "sortDescending": `Sortați descrescător`
};


var $248be0f7eca0ea1f$exports = {};
$248be0f7eca0ea1f$exports = {
    "columnResizer": `Средство изменения размера столбцов`,
    "loading": `Загрузка...`,
    "loadingMore": `Дополнительная загрузка...`,
    "resizeColumn": `Изменить размер столбца`,
    "sortAscending": `Сортировать по возрастанию`,
    "sortDescending": `Сортировать по убыванию`
};


var $3142c640504df85a$exports = {};
$3142c640504df85a$exports = {
    "columnResizer": `Nástroj na zmenu veľkosti stĺpcov`,
    "loading": `Načítava sa...`,
    "loadingMore": `Načítava sa viac...`,
    "resizeColumn": `Zmeniť veľkosť stĺpca`,
    "sortAscending": `Zoradiť vzostupne`,
    "sortDescending": `Zoradiť zostupne`
};


var $7b3b7f28a30b2687$exports = {};
$7b3b7f28a30b2687$exports = {
    "columnResizer": `Prilagojevalnik velikosti stolpcev`,
    "loading": `Nalaganje...`,
    "loadingMore": `Nalaganje več vsebine...`,
    "resizeColumn": `Spremeni velikost stolpca`,
    "sortAscending": `Razvrsti naraščajoče`,
    "sortDescending": `Razvrsti padajoče`
};


var $06c28f958a58f366$exports = {};
$06c28f958a58f366$exports = {
    "columnResizer": `Alat za promenu veličine kolone`,
    "loading": `Učitavam...`,
    "loadingMore": `Učitavam još...`,
    "resizeColumn": `Promeni veličinu kolone`,
    "sortAscending": `Sortiraj po rastućem redosledu`,
    "sortDescending": `Sortiraj po opadajućem redosledu`
};


var $b45c13a581472a6c$exports = {};
$b45c13a581472a6c$exports = {
    "columnResizer": `Ändra storlek på kolumn`,
    "loading": `Läser in...`,
    "loadingMore": `Läser in mer...`,
    "resizeColumn": `Ändra storlek på kolumn`,
    "sortAscending": `Sortera i stigande ordning`,
    "sortDescending": `Sortera i fallande ordning`
};


var $785ea1a5e7a35eb5$exports = {};
$785ea1a5e7a35eb5$exports = {
    "columnResizer": `Yeniden sütun boyutlandırıcı`,
    "loading": `Yükleniyor...`,
    "loadingMore": `Daha fazla yükleniyor...`,
    "resizeColumn": `Sütunu yeniden boyutlandır`,
    "sortAscending": `Artan Sıralama`,
    "sortDescending": `Azalan Sıralama`
};


var $2e46541801441421$exports = {};
$2e46541801441421$exports = {
    "columnResizer": `Засіб змінення розміру стовпця`,
    "loading": `Завантаження…`,
    "loadingMore": `Завантаження інших об’єктів...`,
    "resizeColumn": `Змінити розмір стовпця`,
    "sortAscending": `Сортувати за зростанням`,
    "sortDescending": `Сортувати за спаданням`
};


var $8de129c51e22709f$exports = {};
$8de129c51e22709f$exports = {
    "columnResizer": `列尺寸调整器`,
    "loading": `正在加载...`,
    "loadingMore": `正在加载更多...`,
    "resizeColumn": `调整列大小`,
    "sortAscending": `升序排序`,
    "sortDescending": `降序排序`
};


var $e57af0887d00746b$exports = {};
$e57af0887d00746b$exports = {
    "columnResizer": `欄大小調整器`,
    "loading": `正在載入`,
    "loadingMore": `正在載入更多…`,
    "resizeColumn": `調整欄大小`,
    "sortAscending": `升序排序`,
    "sortDescending": `降序排序`
};


$467944769c14687b$exports = {
    "ar-AE": $daf541512f75fd9b$exports,
    "bg-BG": $50819411ab066aa0$exports,
    "cs-CZ": $4f747f794f1bcba7$exports,
    "da-DK": $9b4578f7fea36fce$exports,
    "de-DE": $d1341bbc3e1d2378$exports,
    "el-GR": $62dc02a47a5c68a9$exports,
    "en-US": $4040b78666bdeb49$exports,
    "es-ES": $b77a23040d0637b4$exports,
    "et-EE": $54ccb4bcf3ebc0a8$exports,
    "fi-FI": $37e671b8f89037ca$exports,
    "fr-FR": $8d65c5abdb6b7cbc$exports,
    "he-IL": $a87fac8df5d40e78$exports,
    "hr-HR": $a7ee65f0f8055b83$exports,
    "hu-HU": $e6091fd2263a451f$exports,
    "it-IT": $c8d9d250bf8952b2$exports,
    "ja-JP": $df07a03bb9f879ed$exports,
    "ko-KR": $40b3ef3504f4b1d0$exports,
    "lt-LT": $c6959b6b120377f9$exports,
    "lv-LV": $8fcc23e9320cffd0$exports,
    "nb-NO": $ec9bb7644b9b61e5$exports,
    "nl-NL": $049ab8e2dc69b622$exports,
    "pl-PL": $480b88f7afcf23a9$exports,
    "pt-BR": $0c053d6ef0255c08$exports,
    "pt-PT": $3aff8d1b1fa24532$exports,
    "ro-RO": $90e0c3e69dc73a74$exports,
    "ru-RU": $248be0f7eca0ea1f$exports,
    "sk-SK": $3142c640504df85a$exports,
    "sl-SI": $7b3b7f28a30b2687$exports,
    "sr-SP": $06c28f958a58f366$exports,
    "sv-SE": $b45c13a581472a6c$exports,
    "tr-TR": $785ea1a5e7a35eb5$exports,
    "uk-UA": $2e46541801441421$exports,
    "zh-CN": $8de129c51e22709f$exports,
    "zh-TW": $e57af0887d00746b$exports
};











var $bd5d41f647a296c3$exports = {};

$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table", () => $bd5d41f647a296c3$export$455c59d2b5bafef0, (v) => $bd5d41f647a296c3$export$455c59d2b5bafef0 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-sortedIcon", () => $bd5d41f647a296c3$export$7d48ded8ceef1e62, (v) => $bd5d41f647a296c3$export$7d48ded8ceef1e62 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-headWrapper", () => $bd5d41f647a296c3$export$a08929593e9a2fb2, (v) => $bd5d41f647a296c3$export$a08929593e9a2fb2 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-headCellContents", () => $bd5d41f647a296c3$export$ce66f3b8316b228e, (v) => $bd5d41f647a296c3$export$ce66f3b8316b228e = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-headCell", () => $bd5d41f647a296c3$export$f64307d6c29e2f55, (v) => $bd5d41f647a296c3$export$f64307d6c29e2f55 = v);
$parcel$export($bd5d41f647a296c3$exports, "is-sortable", () => $bd5d41f647a296c3$export$c5f84948d72c03fb, (v) => $bd5d41f647a296c3$export$c5f84948d72c03fb = v);
$parcel$export($bd5d41f647a296c3$exports, "is-sorted-asc", () => $bd5d41f647a296c3$export$24499792d6b87cb, (v) => $bd5d41f647a296c3$export$24499792d6b87cb = v);
$parcel$export($bd5d41f647a296c3$exports, "is-sorted-desc", () => $bd5d41f647a296c3$export$cda6d7b632f895cc, (v) => $bd5d41f647a296c3$export$cda6d7b632f895cc = v);
$parcel$export($bd5d41f647a296c3$exports, "is-resizable", () => $bd5d41f647a296c3$export$d20629d2e587d4f, (v) => $bd5d41f647a296c3$export$d20629d2e587d4f = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-headCellButton", () => $bd5d41f647a296c3$export$231a910aceaf76df, (v) => $bd5d41f647a296c3$export$231a910aceaf76df = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-columnResizer", () => $bd5d41f647a296c3$export$a1a03b9bd1868758, (v) => $bd5d41f647a296c3$export$a1a03b9bd1868758 = v);
$parcel$export($bd5d41f647a296c3$exports, "focus-ring", () => $bd5d41f647a296c3$export$f39a09f249340e2a, (v) => $bd5d41f647a296c3$export$f39a09f249340e2a = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cell--alignCenter", () => $bd5d41f647a296c3$export$7e9bb4c3d8ec70e2, (v) => $bd5d41f647a296c3$export$7e9bb4c3d8ec70e2 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cell--alignEnd", () => $bd5d41f647a296c3$export$94db5e2e979379b6, (v) => $bd5d41f647a296c3$export$94db5e2e979379b6 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-body", () => $bd5d41f647a296c3$export$c841a58af70827c7, (v) => $bd5d41f647a296c3$export$c841a58af70827c7 = v);
$parcel$export($bd5d41f647a296c3$exports, "is-drop-target", () => $bd5d41f647a296c3$export$d8467f38d2d00bd0, (v) => $bd5d41f647a296c3$export$d8467f38d2d00bd0 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-row", () => $bd5d41f647a296c3$export$fefa57dcd4648052, (v) => $bd5d41f647a296c3$export$fefa57dcd4648052 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--quiet", () => $bd5d41f647a296c3$export$80f179961079d85e, (v) => $bd5d41f647a296c3$export$80f179961079d85e = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cell", () => $bd5d41f647a296c3$export$c073926c283bb618, (v) => $bd5d41f647a296c3$export$c073926c283bb618 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--compact", () => $bd5d41f647a296c3$export$bcb43fe016211cab, (v) => $bd5d41f647a296c3$export$bcb43fe016211cab = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--spacious", () => $bd5d41f647a296c3$export$eef21b0715bc0914, (v) => $bd5d41f647a296c3$export$eef21b0715bc0914 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cellContents", () => $bd5d41f647a296c3$export$683061182a3353d3, (v) => $bd5d41f647a296c3$export$683061182a3353d3 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cell--hideHeader", () => $bd5d41f647a296c3$export$8ff2ab45f5f0045d, (v) => $bd5d41f647a296c3$export$8ff2ab45f5f0045d = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--wrap", () => $bd5d41f647a296c3$export$9d4c255d6285f0ec, (v) => $bd5d41f647a296c3$export$9d4c255d6285f0ec = v);
$parcel$export($bd5d41f647a296c3$exports, "is-focused", () => $bd5d41f647a296c3$export$e7dc768d35940237, (v) => $bd5d41f647a296c3$export$e7dc768d35940237 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cell--divider", () => $bd5d41f647a296c3$export$9531650467e5785b, (v) => $bd5d41f647a296c3$export$9531650467e5785b = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-cellWrapper", () => $bd5d41f647a296c3$export$fe4389976827e927, (v) => $bd5d41f647a296c3$export$fe4389976827e927 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--loadingMore", () => $bd5d41f647a296c3$export$51b307035a9062f1, (v) => $bd5d41f647a296c3$export$51b307035a9062f1 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-row--lastRow", () => $bd5d41f647a296c3$export$6bc25dc2c214dc40, (v) => $bd5d41f647a296c3$export$6bc25dc2c214dc40 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-row--isFlushBottom", () => $bd5d41f647a296c3$export$c544a9cedcdf7e74, (v) => $bd5d41f647a296c3$export$c544a9cedcdf7e74 = v);
$parcel$export($bd5d41f647a296c3$exports, "is-selected", () => $bd5d41f647a296c3$export$1e0fb04f31d3c22a, (v) => $bd5d41f647a296c3$export$1e0fb04f31d3c22a = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-row--firstRow", () => $bd5d41f647a296c3$export$71150fb6934bcef6, (v) => $bd5d41f647a296c3$export$71150fb6934bcef6 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--isVerticalScrollbarVisible", () => $bd5d41f647a296c3$export$f3cbf113923c0570, (v) => $bd5d41f647a296c3$export$f3cbf113923c0570 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table--isHorizontalScrollbarVisible", () => $bd5d41f647a296c3$export$eb2b06f9a223c9ae, (v) => $bd5d41f647a296c3$export$eb2b06f9a223c9ae = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-checkboxCell", () => $bd5d41f647a296c3$export$ae17a7501a9fd0b3, (v) => $bd5d41f647a296c3$export$ae17a7501a9fd0b3 = v);
$parcel$export($bd5d41f647a296c3$exports, "spectrum-Table-checkbox", () => $bd5d41f647a296c3$export$9c494845d6df55df, (v) => $bd5d41f647a296c3$export$9c494845d6df55df = v);
$parcel$export($bd5d41f647a296c3$exports, "is-hovered", () => $bd5d41f647a296c3$export$b8813cd5d7824ce7, (v) => $bd5d41f647a296c3$export$b8813cd5d7824ce7 = v);
$parcel$export($bd5d41f647a296c3$exports, "is-active", () => $bd5d41f647a296c3$export$20fd0f7cd4e6112f, (v) => $bd5d41f647a296c3$export$20fd0f7cd4e6112f = v);
$parcel$export($bd5d41f647a296c3$exports, "is-disabled", () => $bd5d41f647a296c3$export$d35bc1e505d1ebbf, (v) => $bd5d41f647a296c3$export$d35bc1e505d1ebbf = v);
$parcel$export($bd5d41f647a296c3$exports, "is-next-selected", () => $bd5d41f647a296c3$export$53aa811f86efbfad, (v) => $bd5d41f647a296c3$export$53aa811f86efbfad = v);
var $bd5d41f647a296c3$export$455c59d2b5bafef0;
var $bd5d41f647a296c3$export$7d48ded8ceef1e62;
var $bd5d41f647a296c3$export$a08929593e9a2fb2;
var $bd5d41f647a296c3$export$ce66f3b8316b228e;
var $bd5d41f647a296c3$export$f64307d6c29e2f55;
var $bd5d41f647a296c3$export$c5f84948d72c03fb;
var $bd5d41f647a296c3$export$24499792d6b87cb;
var $bd5d41f647a296c3$export$cda6d7b632f895cc;
var $bd5d41f647a296c3$export$d20629d2e587d4f;
var $bd5d41f647a296c3$export$231a910aceaf76df;
var $bd5d41f647a296c3$export$a1a03b9bd1868758;
var $bd5d41f647a296c3$export$f39a09f249340e2a;
var $bd5d41f647a296c3$export$7e9bb4c3d8ec70e2;
var $bd5d41f647a296c3$export$94db5e2e979379b6;
var $bd5d41f647a296c3$export$c841a58af70827c7;
var $bd5d41f647a296c3$export$d8467f38d2d00bd0;
var $bd5d41f647a296c3$export$fefa57dcd4648052;
var $bd5d41f647a296c3$export$80f179961079d85e;
var $bd5d41f647a296c3$export$c073926c283bb618;
var $bd5d41f647a296c3$export$bcb43fe016211cab;
var $bd5d41f647a296c3$export$eef21b0715bc0914;
var $bd5d41f647a296c3$export$683061182a3353d3;
var $bd5d41f647a296c3$export$8ff2ab45f5f0045d;
var $bd5d41f647a296c3$export$9d4c255d6285f0ec;
var $bd5d41f647a296c3$export$e7dc768d35940237;
var $bd5d41f647a296c3$export$9531650467e5785b;
var $bd5d41f647a296c3$export$fe4389976827e927;
var $bd5d41f647a296c3$export$51b307035a9062f1;
var $bd5d41f647a296c3$export$6bc25dc2c214dc40;
var $bd5d41f647a296c3$export$c544a9cedcdf7e74;
var $bd5d41f647a296c3$export$1e0fb04f31d3c22a;
var $bd5d41f647a296c3$export$71150fb6934bcef6;
var $bd5d41f647a296c3$export$f3cbf113923c0570;
var $bd5d41f647a296c3$export$eb2b06f9a223c9ae;
var $bd5d41f647a296c3$export$ae17a7501a9fd0b3;
var $bd5d41f647a296c3$export$9c494845d6df55df;
var $bd5d41f647a296c3$export$b8813cd5d7824ce7;
var $bd5d41f647a296c3$export$20fd0f7cd4e6112f;
var $bd5d41f647a296c3$export$d35bc1e505d1ebbf;
var $bd5d41f647a296c3$export$53aa811f86efbfad;
$bd5d41f647a296c3$export$455c59d2b5bafef0 = "spectrum-Table_d0fc74";
$bd5d41f647a296c3$export$7d48ded8ceef1e62 = "spectrum-Table-sortedIcon_d0fc74";
$bd5d41f647a296c3$export$a08929593e9a2fb2 = "spectrum-Table-headWrapper_d0fc74";
$bd5d41f647a296c3$export$ce66f3b8316b228e = "spectrum-Table-headCellContents_d0fc74";
$bd5d41f647a296c3$export$f64307d6c29e2f55 = "spectrum-Table-headCell_d0fc74";
$bd5d41f647a296c3$export$c5f84948d72c03fb = "is-sortable_d0fc74";
$bd5d41f647a296c3$export$24499792d6b87cb = "is-sorted-asc_d0fc74";
$bd5d41f647a296c3$export$cda6d7b632f895cc = "is-sorted-desc_d0fc74";
$bd5d41f647a296c3$export$d20629d2e587d4f = "is-resizable_d0fc74";
$bd5d41f647a296c3$export$231a910aceaf76df = "spectrum-Table-headCellButton_d0fc74";
$bd5d41f647a296c3$export$a1a03b9bd1868758 = "spectrum-Table-columnResizer_d0fc74";
$bd5d41f647a296c3$export$f39a09f249340e2a = "focus-ring_d0fc74";
$bd5d41f647a296c3$export$7e9bb4c3d8ec70e2 = "spectrum-Table-cell--alignCenter_d0fc74";
$bd5d41f647a296c3$export$94db5e2e979379b6 = "spectrum-Table-cell--alignEnd_d0fc74";
$bd5d41f647a296c3$export$c841a58af70827c7 = "spectrum-Table-body_d0fc74";
$bd5d41f647a296c3$export$d8467f38d2d00bd0 = "is-drop-target_d0fc74";
$bd5d41f647a296c3$export$fefa57dcd4648052 = "spectrum-Table-row_d0fc74";
$bd5d41f647a296c3$export$80f179961079d85e = "spectrum-Table--quiet_d0fc74";
$bd5d41f647a296c3$export$c073926c283bb618 = "spectrum-Table-cell_d0fc74";
$bd5d41f647a296c3$export$bcb43fe016211cab = "spectrum-Table--compact_d0fc74";
$bd5d41f647a296c3$export$eef21b0715bc0914 = "spectrum-Table--spacious_d0fc74";
$bd5d41f647a296c3$export$683061182a3353d3 = "spectrum-Table-cellContents_d0fc74";
$bd5d41f647a296c3$export$8ff2ab45f5f0045d = "spectrum-Table-cell--hideHeader_d0fc74";
$bd5d41f647a296c3$export$9d4c255d6285f0ec = "spectrum-Table--wrap_d0fc74";
$bd5d41f647a296c3$export$e7dc768d35940237 = "is-focused_d0fc74";
$bd5d41f647a296c3$export$9531650467e5785b = "spectrum-Table-cell--divider_d0fc74";
$bd5d41f647a296c3$export$fe4389976827e927 = "spectrum-Table-cellWrapper_d0fc74";
$bd5d41f647a296c3$export$51b307035a9062f1 = "spectrum-Table--loadingMore_d0fc74";
$bd5d41f647a296c3$export$6bc25dc2c214dc40 = "spectrum-Table-row--lastRow_d0fc74";
$bd5d41f647a296c3$export$c544a9cedcdf7e74 = "spectrum-Table-row--isFlushBottom_d0fc74";
$bd5d41f647a296c3$export$1e0fb04f31d3c22a = "is-selected_d0fc74";
$bd5d41f647a296c3$export$71150fb6934bcef6 = "spectrum-Table-row--firstRow_d0fc74";
$bd5d41f647a296c3$export$f3cbf113923c0570 = "spectrum-Table--isVerticalScrollbarVisible_d0fc74";
$bd5d41f647a296c3$export$eb2b06f9a223c9ae = "spectrum-Table--isHorizontalScrollbarVisible_d0fc74";
$bd5d41f647a296c3$export$ae17a7501a9fd0b3 = "spectrum-Table-checkboxCell_d0fc74";
$bd5d41f647a296c3$export$9c494845d6df55df = "spectrum-Table-checkbox_d0fc74";
$bd5d41f647a296c3$export$b8813cd5d7824ce7 = "is-hovered_d0fc74";
$bd5d41f647a296c3$export$20fd0f7cd4e6112f = "is-active_d0fc74";
$bd5d41f647a296c3$export$d35bc1e505d1ebbf = "is-disabled_d0fc74";
$bd5d41f647a296c3$export$53aa811f86efbfad = "is-next-selected_d0fc74";






function $fc695d2eafc2b351$var$Resizer(props, ref) {
    let { column: column , showResizer: showResizer  } = props;
    let { state: state , columnState: columnState  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let stringFormatter = $gyhAV$useLocalizedStringFormatter((/*@__PURE__*/$parcel$interopDefault($467944769c14687b$exports)));
    let { direction: direction  } = $gyhAV$useLocale();
    let { inputProps: inputProps , resizerProps: resizerProps  } = $gyhAV$useTableColumnResize({
        ...props,
        label: stringFormatter.format('columnResizer')
    }, state, columnState, ref);
    let style = {
        cursor: undefined,
        height: '100%',
        display: showResizer ? undefined : 'none',
        touchAction: 'none'
    };
    if (columnState.getColumnMinWidth(column.key) >= columnState.getColumnWidth(column.key)) style.cursor = direction === 'rtl' ? 'w-resize' : 'e-resize';
    else if (columnState.getColumnMaxWidth(column.key) <= columnState.getColumnWidth(column.key)) style.cursor = direction === 'rtl' ? 'e-resize' : 'w-resize';
    else style.cursor = 'col-resize';
    return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        within: true,
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        role: "presentation",
        style: style,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-columnResizer'),
        ...resizerProps
    }, /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$VisuallyHidden, null, /*#__PURE__*/ $gyhAV$react.createElement("input", {
        ref: ref,
        type: "range",
        ...inputProps
    })))));
}
const $fc695d2eafc2b351$export$48a76196cafe3b93 = /*#__PURE__*/ $gyhAV$react.forwardRef($fc695d2eafc2b351$var$Resizer);



var $325bc3d43b25708b$exports = {};

$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table", () => $325bc3d43b25708b$export$8cc7e6e5f955c192, (v) => $325bc3d43b25708b$export$8cc7e6e5f955c192 = v);
$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table-cell", () => $325bc3d43b25708b$export$19015e98090cea63, (v) => $325bc3d43b25708b$export$19015e98090cea63 = v);
$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table-cellWrapper", () => $325bc3d43b25708b$export$ea1d9f40910c509, (v) => $325bc3d43b25708b$export$ea1d9f40910c509 = v);
$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table-cell--alignStart", () => $325bc3d43b25708b$export$25d7f56ba6d0d442, (v) => $325bc3d43b25708b$export$25d7f56ba6d0d442 = v);
$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table-cell--alignCenter", () => $325bc3d43b25708b$export$14101ea2699002fc, (v) => $325bc3d43b25708b$export$14101ea2699002fc = v);
$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table-cell--alignEnd", () => $325bc3d43b25708b$export$c594335f8535fc47, (v) => $325bc3d43b25708b$export$c594335f8535fc47 = v);
$parcel$export($325bc3d43b25708b$exports, "react-spectrum-Table-centeredWrapper", () => $325bc3d43b25708b$export$8bffb31c98aaf8d5, (v) => $325bc3d43b25708b$export$8bffb31c98aaf8d5 = v);
var $325bc3d43b25708b$export$8cc7e6e5f955c192;
var $325bc3d43b25708b$export$19015e98090cea63;
var $325bc3d43b25708b$export$ea1d9f40910c509;
var $325bc3d43b25708b$export$25d7f56ba6d0d442;
var $325bc3d43b25708b$export$14101ea2699002fc;
var $325bc3d43b25708b$export$c594335f8535fc47;
var $325bc3d43b25708b$export$8bffb31c98aaf8d5;
$325bc3d43b25708b$export$8cc7e6e5f955c192 = "react-spectrum-Table_e844a7";
$325bc3d43b25708b$export$19015e98090cea63 = "react-spectrum-Table-cell_e844a7";
$325bc3d43b25708b$export$ea1d9f40910c509 = "react-spectrum-Table-cellWrapper_e844a7";
$325bc3d43b25708b$export$25d7f56ba6d0d442 = "react-spectrum-Table-cell--alignStart_e844a7";
$325bc3d43b25708b$export$14101ea2699002fc = "react-spectrum-Table-cell--alignCenter_e844a7";
$325bc3d43b25708b$export$c594335f8535fc47 = "react-spectrum-Table-cell--alignEnd_e844a7";
$325bc3d43b25708b$export$8bffb31c98aaf8d5 = "react-spectrum-Table-centeredWrapper_e844a7";











const $d14697b14e638114$var$DEFAULT_HEADER_HEIGHT = {
    medium: 34,
    large: 40
};
const $d14697b14e638114$var$DEFAULT_HIDE_HEADER_CELL_WIDTH = {
    medium: 36,
    large: 44
};
const $d14697b14e638114$var$ROW_HEIGHTS = {
    compact: {
        medium: 32,
        large: 40
    },
    regular: {
        medium: 40,
        large: 50
    },
    spacious: {
        medium: 48,
        large: 60
    }
};
const $d14697b14e638114$var$SELECTION_CELL_DEFAULT_WIDTH = {
    medium: 38,
    large: 48
};
const $d14697b14e638114$var$TableContext = /*#__PURE__*/ $gyhAV$react.createContext(null);
function $d14697b14e638114$export$3cb274deb6c2d854() {
    return $gyhAV$useContext($d14697b14e638114$var$TableContext);
}
function $d14697b14e638114$var$TableView(props, ref) {
    props = $gyhAV$useProviderProps(props);
    let { isQuiet: isQuiet , onAction: onAction  } = props;
    let { styleProps: styleProps  } = $gyhAV$useStyleProps(props);
    let [showSelectionCheckboxes, setShowSelectionCheckboxes] = $gyhAV$useState(props.selectionStyle !== 'highlight');
    let { direction: direction  } = $gyhAV$useLocale();
    let { scale: scale  } = $gyhAV$useProvider();
    const getDefaultWidth = $gyhAV$useCallback(({ hideHeader: hideHeader , isSelectionCell: isSelectionCell , showDivider: showDivider  })=>{
        if (hideHeader) {
            let width = $d14697b14e638114$var$DEFAULT_HIDE_HEADER_CELL_WIDTH[scale];
            return showDivider ? width + 1 : width;
        } else if (isSelectionCell) return $d14697b14e638114$var$SELECTION_CELL_DEFAULT_WIDTH[scale];
    }, [
        scale
    ]);
    let state = $gyhAV$useTableState({
        ...props,
        showSelectionCheckboxes: showSelectionCheckboxes,
        selectionBehavior: props.selectionStyle === 'highlight' ? 'replace' : 'toggle'
    });
    const columnState = $gyhAV$useTableColumnResizeState({
        ...props,
        getDefaultWidth: getDefaultWidth
    }, state.collection);
    // If the selection behavior changes in state, we need to update showSelectionCheckboxes here due to the circular dependency...
    let shouldShowCheckboxes = state.selectionManager.selectionBehavior !== 'replace';
    if (shouldShowCheckboxes !== showSelectionCheckboxes) setShowSelectionCheckboxes(shouldShowCheckboxes);
    let domRef = $gyhAV$useDOMRef(ref);
    let bodyRef = $gyhAV$useRef();
    let stringFormatter = $gyhAV$useLocalizedStringFormatter((/*@__PURE__*/$parcel$interopDefault($467944769c14687b$exports)));
    let density = props.density || 'regular';
    let layout = $gyhAV$useMemo(()=>new $gyhAV$TableLayout({
            // If props.rowHeight is auto, then use estimated heights based on scale, otherwise use fixed heights.
            rowHeight: props.overflowMode === 'wrap' ? null : $d14697b14e638114$var$ROW_HEIGHTS[density][scale],
            estimatedRowHeight: props.overflowMode === 'wrap' ? $d14697b14e638114$var$ROW_HEIGHTS[density][scale] : null,
            headingHeight: props.overflowMode === 'wrap' ? null : $d14697b14e638114$var$DEFAULT_HEADER_HEIGHT[scale],
            estimatedHeadingHeight: props.overflowMode === 'wrap' ? $d14697b14e638114$var$DEFAULT_HEADER_HEIGHT[scale] : null
        })
    , [
        props.overflowMode,
        scale,
        density
    ]);
    layout.collection = state.collection;
    layout.getColumnWidth = columnState.getColumnWidth;
    let { gridProps: gridProps  } = $gyhAV$useTable({
        ...props,
        isVirtualized: true,
        layout: layout,
        onRowAction: onAction
    }, state, domRef);
    let [headerRowHovered, setHeaderRowHovered] = $gyhAV$useState(false);
    let renderWrapper = (parent, reusableView, children, renderChildren)=>{
        let style = $gyhAV$layoutInfoToStyle(reusableView.layoutInfo, direction, parent && parent.layoutInfo);
        if (style.overflow === 'hidden') style.overflow = 'visible'; // needed to support position: sticky
        if (reusableView.viewType === 'rowgroup') return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableRowGroup, {
            key: reusableView.key,
            style: style
        }, renderChildren(children)));
        if (reusableView.viewType === 'header') return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableHeader, {
            key: reusableView.key,
            style: style
        }, renderChildren(children)));
        if (reusableView.viewType === 'row') return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableRow, {
            key: reusableView.key,
            item: reusableView.content,
            style: style,
            hasActions: onAction
        }, renderChildren(children)));
        if (reusableView.viewType === 'headerrow') return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableHeaderRow, {
            onHoverChange: setHeaderRowHovered,
            key: reusableView.key,
            style: style,
            item: reusableView.content
        }, renderChildren(children)));
        return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$VirtualizerItem, {
            key: reusableView.key,
            reusableView: reusableView,
            parent: parent,
            className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-cellWrapper', $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), {
                'react-spectrum-Table-cellWrapper': !reusableView.layoutInfo.estimatedSize
            }))
        }));
    };
    let renderView = (type, item)=>{
        switch(type){
            case 'header':
            case 'rowgroup':
            case 'section':
            case 'row':
            case 'headerrow':
                return null;
            case 'cell':
                if (item.props.isSelectionCell) return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableCheckboxCell, {
                    cell: item
                }));
                return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableCell, {
                    cell: item
                }));
            case 'placeholder':
                // TODO: move to react-aria?
                return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
                    role: "gridcell",
                    "aria-colindex": item.index + 1,
                    "aria-colspan": item.colspan > 1 ? item.colspan : null
                }));
            case 'column':
                if (item.props.isSelectionCell) return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableSelectAllCell, {
                    column: item
                }));
                if (item.props.hideHeader) return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$TooltipTrigger, {
                    placement: "top",
                    trigger: "focus"
                }, /*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableColumnHeader, {
                    column: item
                }), /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$Tooltip, {
                    placement: "top"
                }, item.rendered)));
                if (item.props.allowsResizing) return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$ResizableTableColumnHeader, {
                    tableRef: domRef,
                    column: item
                }));
                return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableColumnHeader, {
                    column: item
                }));
            case 'loader':
                return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$CenteredWrapper, null, /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$ProgressCircle, {
                    isIndeterminate: true,
                    "aria-label": state.collection.size > 0 ? stringFormatter.format('loadingMore') : stringFormatter.format('loading')
                })));
            case 'empty':
                {
                    let emptyState = props.renderEmptyState ? props.renderEmptyState() : null;
                    if (emptyState == null) return null;
                    return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$CenteredWrapper, null, emptyState));
                }
        }
    };
    let [isVerticalScrollbarVisible, setVerticalScollbarVisible] = $gyhAV$useState(false);
    let [isHorizontalScrollbarVisible, setHorizontalScollbarVisible] = $gyhAV$useState(false);
    let viewport = $gyhAV$useRef({
        x: 0,
        y: 0,
        width: 0,
        height: 0
    });
    let onVisibleRectChange = $gyhAV$useCallback((e)=>{
        if (viewport.current.width === e.width && viewport.current.height === e.height) return;
        viewport.current = e;
        if (bodyRef.current) {
            setVerticalScollbarVisible(bodyRef.current.clientWidth + 2 < bodyRef.current.offsetWidth);
            setHorizontalScollbarVisible(bodyRef.current.clientHeight + 2 < bodyRef.current.offsetHeight);
        }
    }, []);
    return(/*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableContext.Provider, {
        value: {
            state: state,
            layout: layout,
            columnState: columnState,
            headerRowHovered: headerRowHovered
        }
    }, /*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableVirtualizer, {
        ...gridProps,
        ...styleProps,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table', `spectrum-Table--${density}`, {
            'spectrum-Table--quiet': isQuiet,
            'spectrum-Table--wrap': props.overflowMode === 'wrap',
            'spectrum-Table--loadingMore': state.collection.body.props.loadingState === 'loadingMore',
            'spectrum-Table--isVerticalScrollbarVisible': isVerticalScrollbarVisible,
            'spectrum-Table--isHorizontalScrollbarVisible': isHorizontalScrollbarVisible
        }, $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), 'react-spectrum-Table')),
        layout: layout,
        collection: state.collection,
        focusedKey: state.selectionManager.focusedKey,
        renderView: renderView,
        renderWrapper: renderWrapper,
        setTableWidth: columnState.setTableWidth,
        onVisibleRectChange: onVisibleRectChange,
        domRef: domRef,
        bodyRef: bodyRef,
        getColumnWidth: columnState.getColumnWidth
    })));
}
// This is a custom Virtualizer that also has a header that syncs its scroll position with the body.
function $d14697b14e638114$var$TableVirtualizer({ layout: layout , collection: collection , focusedKey: focusedKey , renderView: renderView , renderWrapper: renderWrapper , domRef: domRef , bodyRef: bodyRef , setTableWidth: setTableWidth , getColumnWidth: getColumnWidth , onVisibleRectChange: onVisibleRectChangeProp , ...otherProps }) {
    var ref;
    let { direction: direction  } = $gyhAV$useLocale();
    let headerRef = $gyhAV$useRef();
    let loadingState = collection.body.props.loadingState;
    let isLoading = loadingState === 'loading' || loadingState === 'loadingMore';
    let onLoadMore = collection.body.props.onLoadMore;
    let state = $gyhAV$useVirtualizerState({
        layout: layout,
        collection: collection,
        renderView: renderView,
        renderWrapper: renderWrapper,
        onVisibleRectChange (rect) {
            bodyRef.current.scrollTop = rect.y;
            $gyhAV$setScrollLeft(bodyRef.current, direction, rect.x);
        },
        transitionDuration: isLoading ? 160 : 220
    });
    let { virtualizerProps: virtualizerProps  } = $gyhAV$useVirtualizer({
        focusedKey: focusedKey,
        scrollToItem (key) {
            let item = collection.getItem(key);
            let column = collection.columns[0];
            state.virtualizer.scrollToItem(key, {
                duration: 0,
                // Prevent scrolling to the top when clicking on column headers.
                shouldScrollY: (item === null || item === void 0 ? void 0 : item.type) !== 'column',
                // Offset scroll position by width of selection cell
                // (which is sticky and will overlap the cell we're scrolling to).
                offsetX: column.props.isSelectionCell ? layout.getColumnWidth(column.key) : 0
            });
        }
    }, state, domRef);
    // If columnwidths change, need to relayout.
    $gyhAV$useLayoutEffect(()=>{
        state.virtualizer.relayoutNow({
            sizeChanged: true
        });
    }, [
        getColumnWidth,
        state.virtualizer
    ]);
    let headerHeight = ((ref = layout.getLayoutInfo('header')) === null || ref === void 0 ? void 0 : ref.rect.height) || 0;
    let visibleRect = state.virtualizer.visibleRect;
    // Sync the scroll position from the table body to the header container.
    let onScroll = $gyhAV$useCallback(()=>{
        headerRef.current.scrollLeft = bodyRef.current.scrollLeft;
    }, [
        bodyRef
    ]);
    let onVisibleRectChange = $gyhAV$useCallback((rect)=>{
        setTableWidth(rect.width);
        state.setVisibleRect(rect);
        if (!isLoading && onLoadMore) {
            let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;
            if (rect.y > scrollOffset) onLoadMore();
        }
    }, [
        onLoadMore,
        isLoading,
        state.setVisibleRect,
        state.virtualizer
    ]);
    $gyhAV$useLayoutEffect(()=>{
        if (!isLoading && onLoadMore && !state.isAnimating) {
            if (state.contentSize.height <= state.virtualizer.visibleRect.height) onLoadMore();
        }
    }, [
        state.contentSize,
        state.virtualizer,
        state.isAnimating,
        onLoadMore,
        isLoading
    ]);
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...$gyhAV$mergeProps(otherProps, virtualizerProps),
        ref: domRef
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        role: "presentation",
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headWrapper'),
        style: {
            width: visibleRect.width,
            height: headerHeight,
            overflow: 'hidden',
            position: 'relative',
            willChange: state.isScrolling ? 'scroll-position' : '',
            transition: state.isAnimating ? `none ${state.virtualizer.transitionDuration}ms` : undefined
        },
        ref: headerRef
    }, state.visibleViews[0]), /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$ScrollView, {
        role: "presentation",
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-body'),
        style: {
            flex: 1
        },
        innerStyle: {
            overflow: 'visible',
            transition: state.isAnimating ? `none ${state.virtualizer.transitionDuration}ms` : undefined
        },
        ref: bodyRef,
        contentSize: state.contentSize,
        onVisibleRectChange: $gyhAV$chain(onVisibleRectChange, onVisibleRectChangeProp),
        onScrollStart: state.startScrolling,
        onScrollEnd: state.endScrolling,
        onScroll: onScroll
    }, state.visibleViews[1])));
}
function $d14697b14e638114$var$TableHeader({ children: children , ...otherProps }) {
    let { rowGroupProps: rowGroupProps  } = $gyhAV$useTableRowGroup();
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...rowGroupProps,
        ...otherProps,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-head')
    }, children));
}
function $d14697b14e638114$var$TableColumnHeader(props) {
    var ref, ref1, ref2, ref3;
    let { column: column  } = props;
    let ref4 = $gyhAV$useRef(null);
    let { state: state  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let { columnHeaderProps: columnHeaderProps  } = $gyhAV$useTableColumnHeader({
        node: column,
        isVirtualized: true
    }, state, ref4);
    let columnProps = column.props;
    let { hoverProps: hoverProps , isHovered: isHovered  } = $gyhAV$useHover(props);
    const allProps = [
        columnHeaderProps,
        hoverProps
    ];
    return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...$gyhAV$mergeProps(...allProps),
        ref: ref4,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headCell', {
            'is-resizable': columnProps.allowsResizing,
            'is-sortable': columnProps.allowsSorting,
            'is-sorted-desc': ((ref = state.sortDescriptor) === null || ref === void 0 ? void 0 : ref.column) === column.key && ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.direction) === 'descending',
            'is-sorted-asc': ((ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.column) === column.key && ((ref3 = state.sortDescriptor) === null || ref3 === void 0 ? void 0 : ref3.direction) === 'ascending',
            'is-hovered': isHovered,
            'spectrum-Table-cell--hideHeader': columnProps.hideHeader
        }, $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), 'react-spectrum-Table-cell', {
            'react-spectrum-Table-cell--alignCenter': columnProps.align === 'center' || column.colspan > 1,
            'react-spectrum-Table-cell--alignEnd': columnProps.align === 'end'
        }))
    }, columnProps.hideHeader ? /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$VisuallyHidden, null, column.rendered) : /*#__PURE__*/ $gyhAV$react.createElement("div", {
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headCellContents')
    }, column.rendered), columnProps.allowsSorting && /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$spectrumiconsuiArrowDownSmall, {
        UNSAFE_className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-sortedIcon')
    }))));
}
let $d14697b14e638114$var$_TableColumnHeaderButton = (props, ref)=>{
    let domRef = $gyhAV$useFocusableRef(ref);
    let { buttonProps: buttonProps  } = $gyhAV$useButton({
        ...props,
        elementType: 'div'
    }, domRef);
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headCellContents')
    }, /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headCellButton'),
        ...buttonProps,
        ref: domRef
    }, props.children))));
};
let $d14697b14e638114$var$TableColumnHeaderButton = /*#__PURE__*/ $gyhAV$react.forwardRef($d14697b14e638114$var$_TableColumnHeaderButton);
function $d14697b14e638114$var$ResizableTableColumnHeader(props) {
    var ref, ref5, ref6, ref7, ref8;
    let { column: column  } = props;
    let ref9 = $gyhAV$useRef(null);
    let triggerRef = $gyhAV$useRef(null);
    let resizingRef = $gyhAV$useRef(null);
    let { state: state , columnState: columnState , headerRowHovered: headerRowHovered  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let stringFormatter = $gyhAV$useLocalizedStringFormatter((/*@__PURE__*/$parcel$interopDefault($467944769c14687b$exports)));
    let { columnHeaderProps: columnHeaderProps  } = $gyhAV$useTableColumnHeader({
        node: column,
        isVirtualized: true,
        hasMenu: true
    }, state, ref9);
    let { hoverProps: hoverProps , isHovered: isHovered  } = $gyhAV$useHover(props);
    const allProps = [
        columnHeaderProps,
        hoverProps
    ];
    let columnProps = column.props;
    if (columnProps.width && columnProps.allowsResizing) throw new Error('Controlled state is not yet supported with column resizing. Please use defaultWidth for uncontrolled column resizing or remove the allowsResizing prop.');
    const onMenuSelect = (key)=>{
        switch(key){
            case 'sort-asc':
                state.sort(column.key, 'ascending');
                break;
            case 'sort-desc':
                state.sort(column.key, 'descending');
                break;
            case 'resize':
                columnState.onColumnResizeStart(column);
                break;
        }
    };
    let allowsSorting = (ref = column.props) === null || ref === void 0 ? void 0 : ref.allowsSorting;
    let items = $gyhAV$useMemo(()=>{
        let options = [
            allowsSorting ? {
                label: stringFormatter.format('sortAscending'),
                id: 'sort-asc'
            } : undefined,
            allowsSorting ? {
                label: stringFormatter.format('sortDescending'),
                id: 'sort-desc'
            } : undefined,
            {
                label: stringFormatter.format('resizeColumn'),
                id: 'resize'
            }
        ];
        return options;
    }, [
        allowsSorting
    ]);
    $gyhAV$useEffect(()=>{
        if (columnState.currentlyResizingColumn === column.key) // focusSafely won't actually focus because the focus moves from the menuitem to the body during the after transition wait
        // without the immediate timeout, Android Chrome doesn't move focus to the resizer
        setTimeout(()=>{
            resizingRef.current.focus();
        }, 0);
    }, [
        columnState.currentlyResizingColumn,
        column.key
    ]);
    let showResizer = headerRowHovered || columnState.currentlyResizingColumn != null;
    return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...$gyhAV$mergeProps(...allProps),
        ref: ref9,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headCell', {
            'is-resizable': columnProps.allowsResizing,
            'is-sortable': columnProps.allowsSorting,
            'is-sorted-desc': ((ref5 = state.sortDescriptor) === null || ref5 === void 0 ? void 0 : ref5.column) === column.key && ((ref6 = state.sortDescriptor) === null || ref6 === void 0 ? void 0 : ref6.direction) === 'descending',
            'is-sorted-asc': ((ref7 = state.sortDescriptor) === null || ref7 === void 0 ? void 0 : ref7.column) === column.key && ((ref8 = state.sortDescriptor) === null || ref8 === void 0 ? void 0 : ref8.direction) === 'ascending',
            'is-hovered': isHovered,
            'spectrum-Table-cell--hideHeader': columnProps.hideHeader
        }, $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), 'react-spectrum-Table-cell', {
            'react-spectrum-Table-cell--alignCenter': columnProps.align === 'center' || column.colspan > 1,
            'react-spectrum-Table-cell--alignEnd': columnProps.align === 'end'
        }))
    }, /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$MenuTrigger, null, /*#__PURE__*/ $gyhAV$react.createElement($d14697b14e638114$var$TableColumnHeaderButton, {
        ref: triggerRef
    }, columnProps.hideHeader ? /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$VisuallyHidden, null, column.rendered) : column.rendered, columnProps.allowsSorting && /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$spectrumiconsuiArrowDownSmall, {
        UNSAFE_className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-sortedIcon')
    })), /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$Menu, {
        onAction: onMenuSelect,
        minWidth: "size-2000",
        items: items
    }, (item)=>/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$Item, null, item.label)
    )), /*#__PURE__*/ $gyhAV$react.createElement($fc695d2eafc2b351$export$48a76196cafe3b93, {
        ref: resizingRef,
        column: column,
        showResizer: showResizer,
        triggerRef: $gyhAV$useUnwrapDOMRef(triggerRef)
    }))));
}
function $d14697b14e638114$var$TableSelectAllCell({ column: column  }) {
    let ref = $gyhAV$useRef();
    let { state: state  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let isSingleSelectionMode = state.selectionManager.selectionMode === 'single';
    let { columnHeaderProps: columnHeaderProps  } = $gyhAV$useTableColumnHeader({
        node: column,
        isVirtualized: true
    }, state, ref);
    let { checkboxProps: checkboxProps  } = $gyhAV$useTableSelectAllCheckbox(state);
    let { hoverProps: hoverProps , isHovered: isHovered  } = $gyhAV$useHover({
    });
    return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...$gyhAV$mergeProps(columnHeaderProps, hoverProps),
        ref: ref,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-headCell', 'spectrum-Table-checkboxCell', {
            'is-hovered': isHovered
        })
    }, /*
            In single selection mode, the checkbox will be hidden.
            So to avoid leaving a column header with no accessible content,
            we use a VisuallyHidden component to include the aria-label from the checkbox,
            which for single selection will be "Select."
          */ isSingleSelectionMode && /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$VisuallyHidden, null, checkboxProps['aria-label']), /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$Checkbox, {
        ...checkboxProps,
        isDisabled: isSingleSelectionMode,
        isEmphasized: true,
        UNSAFE_style: isSingleSelectionMode ? {
            visibility: 'hidden'
        } : undefined,
        UNSAFE_className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-checkbox')
    }))));
}
function $d14697b14e638114$var$TableRowGroup({ children: children , ...otherProps }) {
    let { rowGroupProps: rowGroupProps  } = $gyhAV$useTableRowGroup();
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...rowGroupProps,
        ...otherProps
    }, children));
}
function $d14697b14e638114$var$TableRow({ item: item , children: children , hasActions: hasActions , ...otherProps }) {
    var ref, ref10, ref11;
    let ref12 = $gyhAV$useRef();
    let { state: state , layout: layout  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let allowsInteraction = state.selectionManager.selectionMode !== 'none' || hasActions;
    let isDisabled = !allowsInteraction || state.disabledKeys.has(item.key);
    let isSelected = state.selectionManager.isSelected(item.key);
    let { rowProps: rowProps  } = $gyhAV$useTableRow({
        node: item,
        isVirtualized: true
    }, state, ref12);
    let { pressProps: pressProps , isPressed: isPressed  } = $gyhAV$usePress({
        isDisabled: isDisabled
    });
    // The row should show the focus background style when any cell inside it is focused.
    // If the row itself is focused, then it should have a blue focus indicator on the left.
    let { isFocusVisible: isFocusVisibleWithin , focusProps: focusWithinProps  } = $gyhAV$useFocusRing({
        within: true
    });
    let { isFocusVisible: isFocusVisible , focusProps: focusProps  } = $gyhAV$useFocusRing();
    let { hoverProps: hoverProps , isHovered: isHovered  } = $gyhAV$useHover({
        isDisabled: isDisabled
    });
    let props = $gyhAV$mergeProps(rowProps, otherProps, focusWithinProps, focusProps, hoverProps, pressProps);
    let isFirstRow = ((ref = state.collection.rows.find((row)=>row.level === 1
    )) === null || ref === void 0 ? void 0 : ref.key) === item.key;
    let isLastRow = item.nextKey == null;
    // Figure out if the TableView content is equal or greater in height to the container. If so, we'll need to round the bottom
    // border corners of the last row when selected.
    let isFlushWithContainerBottom = false;
    if (isLastRow) {
        if (((ref10 = layout.getContentSize()) === null || ref10 === void 0 ? void 0 : ref10.height) >= ((ref11 = layout.virtualizer) === null || ref11 === void 0 ? void 0 : ref11.getVisibleRect().height)) isFlushWithContainerBottom = true;
    }
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...props,
        ref: ref12,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-row', {
            'is-active': isPressed,
            'is-selected': isSelected,
            'spectrum-Table-row--highlightSelection': state.selectionManager.selectionBehavior === 'replace',
            'is-next-selected': state.selectionManager.isSelected(item.nextKey),
            'is-focused': isFocusVisibleWithin,
            'focus-ring': isFocusVisible,
            'is-hovered': isHovered,
            'is-disabled': isDisabled,
            'spectrum-Table-row--firstRow': isFirstRow,
            'spectrum-Table-row--lastRow': isLastRow,
            'spectrum-Table-row--isFlushBottom': isFlushWithContainerBottom
        })
    }, children));
}
function $d14697b14e638114$var$TableHeaderRow({ item: item , children: children , style: style , ...props }) {
    let { state: state  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let ref = $gyhAV$useRef();
    let { rowProps: rowProps  } = $gyhAV$useTableHeaderRow({
        node: item,
        isVirtualized: true
    }, state, ref);
    let { hoverProps: hoverProps  } = $gyhAV$useHover(props);
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...$gyhAV$mergeProps(rowProps, hoverProps),
        ref: ref,
        style: style
    }, children));
}
function $d14697b14e638114$var$TableCheckboxCell({ cell: cell  }) {
    let ref = $gyhAV$useRef();
    let { state: state  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let isDisabled = state.disabledKeys.has(cell.parentKey);
    let { gridCellProps: gridCellProps  } = $gyhAV$useTableCell({
        node: cell,
        isVirtualized: true
    }, state, ref);
    let { checkboxProps: checkboxProps  } = $gyhAV$useTableSelectionCheckbox({
        key: cell.parentKey
    }, state);
    return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...gridCellProps,
        ref: ref,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-cell', 'spectrum-Table-checkboxCell', {
            'is-disabled': isDisabled
        }, $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), 'react-spectrum-Table-cell'))
    }, state.selectionManager.selectionMode !== 'none' && /*#__PURE__*/ $gyhAV$react.createElement($gyhAV$Checkbox, {
        ...checkboxProps,
        isEmphasized: true,
        isDisabled: isDisabled,
        UNSAFE_className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-checkbox')
    }))));
}
function $d14697b14e638114$var$TableCell({ cell: cell  }) {
    let { state: state  } = $d14697b14e638114$export$3cb274deb6c2d854();
    let ref = $gyhAV$useRef();
    let columnProps = cell.column.props;
    let isDisabled = state.disabledKeys.has(cell.parentKey);
    let { gridCellProps: gridCellProps  } = $gyhAV$useTableCell({
        node: cell,
        isVirtualized: true
    }, state, ref);
    return(/*#__PURE__*/ $gyhAV$react.createElement($gyhAV$FocusRing, {
        focusRingClass: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'focus-ring')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        ...gridCellProps,
        ref: ref,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-cell', {
            'spectrum-Table-cell--divider': columnProps.showDivider && cell.column.nextKey !== null,
            'spectrum-Table-cell--hideHeader': columnProps.hideHeader,
            'is-disabled': isDisabled
        }, $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), 'react-spectrum-Table-cell', {
            'react-spectrum-Table-cell--alignStart': columnProps.align === 'start',
            'react-spectrum-Table-cell--alignCenter': columnProps.align === 'center',
            'react-spectrum-Table-cell--alignEnd': columnProps.align === 'end'
        }))
    }, /*#__PURE__*/ $gyhAV$react.createElement("span", {
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($bd5d41f647a296c3$exports)), 'spectrum-Table-cellContents')
    }, cell.rendered))));
}
function $d14697b14e638114$var$CenteredWrapper({ children: children  }) {
    let { state: state  } = $d14697b14e638114$export$3cb274deb6c2d854();
    return(/*#__PURE__*/ $gyhAV$react.createElement("div", {
        role: "row",
        "aria-rowindex": state.collection.headerRows.length + state.collection.size + 1,
        className: $gyhAV$classNames((/*@__PURE__*/$parcel$interopDefault($325bc3d43b25708b$exports)), 'react-spectrum-Table-centeredWrapper')
    }, /*#__PURE__*/ $gyhAV$react.createElement("div", {
        role: "rowheader",
        "aria-colspan": state.collection.columns.length
    }, children)));
}
/**
 * Tables are containers for displaying information. They allow users to quickly scan, sort, compare, and take action on large amounts of data.
 */ const $d14697b14e638114$export$b3c27e869d856b7 = /*#__PURE__*/ $gyhAV$react.forwardRef($d14697b14e638114$var$TableView);



// Override TS for Column to support spectrum specific props.
const $e668f3d0f378a712$export$816b5d811295e6bc = $gyhAV$Column;


export {$e668f3d0f378a712$export$816b5d811295e6bc as Column, $d14697b14e638114$export$b3c27e869d856b7 as TableView, $e668f3d0f378a712$re_export$TableHeader as TableHeader, $e668f3d0f378a712$re_export$TableBody as TableBody, $e668f3d0f378a712$re_export$Section as Section, $e668f3d0f378a712$re_export$Row as Row, $e668f3d0f378a712$re_export$Cell as Cell};
//# sourceMappingURL=module.js.map
